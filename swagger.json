{"consumes":["application/json"],"produces":["application/json"],"schemes":["http","https"],"swagger":"2.0","info":{"description":"A cool authentication server.","title":"Auth Server","version":"0.0.3"},"basePath":"/","paths":{"/auth":{"get":{"description":"Authenticates and authorizes a given token.\nIn the case of a granted access, the session payload is set in the response header 'Auth-Server-Payload'.","tags":["Auth"],"summary":"Authorize token","operationId":"AuthAuthorizeToken","parameters":[{"type":"string","x-go-name":"AccessToken","description":"Access token (can also be set via the 'Auth-Server-Token' header. Ex: 'Auth-Server-Token: jhPd6Gf3jIP2h')","name":"accessToken","in":"query"},{"type":"string","x-go-name":"RequestURL","description":"The URL requested for access (can also be set via the 'Request-Url' header. Ex: 'Request-Url: http://foo.com/bar')","name":"requestUrl","in":"query"}],"responses":{"204":{"$ref":"#/responses/nil"},"401":{"$ref":"#/responses/UnauthorizedResponse"},"500":{"$ref":"#/responses/InternalResponse"}}}},"/policies":{"get":{"description":"Finds all the policies from the data source.","tags":["Policies"],"summary":"Find","operationId":"PoliciesFind","responses":{"200":{"$ref":"#/responses/PoliciesResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"post":{"description":"Creates a policy in the data source.","tags":["Policies"],"summary":"Create","operationId":"PoliciesCreate","parameters":[{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/Policy"}}],"responses":{"201":{"$ref":"#/responses/PolicyResponse"},"400":{"$ref":"#/responses/BodyDecodingResponse"},"422":{"$ref":"#/responses/ValidationResponse"},"500":{"$ref":"#/responses/InternalResponse"}}}},"/policies/{name}":{"get":{"description":"Finds a policy by name from the data source.","tags":["Policies"],"summary":"Find by name","operationId":"PoliciesFindByName","parameters":[{"type":"string","description":"Policy name","name":"Name","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/PolicyResponse"},"404":{"$ref":"#/responses/NotFoundResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"put":{"description":"Updates a policy by name from the data source.","tags":["Policies"],"summary":"Update by name","operationId":"PoliciesUpdateByName","parameters":[{"type":"string","description":"Policy name","name":"Name","in":"path","required":true},{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/Policy"}}],"responses":{"200":{"$ref":"#/responses/PolicyResponse"},"400":{"$ref":"#/responses/BodyDecodingResponse"},"404":{"$ref":"#/responses/NotFoundResponse"},"422":{"$ref":"#/responses/ValidationResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"delete":{"description":"Deletes a policy by name from the data source.","tags":["Policies"],"summary":"Delete by name","operationId":"PoliciesDeleteByName","parameters":[{"type":"string","description":"Policy name","name":"Name","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/PolicyResponse"},"404":{"$ref":"#/responses/NotFoundResponse"},"500":{"$ref":"#/responses/InternalResponse"}}}},"/redirect":{"get":{"description":"Redirects a requests to the URL set in the default configuration or in the corresponding resource.","tags":["Auth"],"summary":"Redirect","operationId":"AuthRedirect","parameters":[{"type":"string","x-go-name":"RequestURL","description":"The URL requested for access (can also be set via the 'Request-Url' header. Ex: 'Request-Url: http://foo.com/bar')","name":"requestUrl","in":"query"}],"responses":{"307":{"$ref":"#/responses/nil"},"500":{"$ref":"#/responses/InternalResponse"}}}},"/resources":{"get":{"description":"Finds all the resources from the data source.","tags":["Resources"],"summary":"Find","operationId":"ResourcesFind","responses":{"200":{"$ref":"#/responses/ResourcesResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"post":{"description":"Creates a resource in the data source.","tags":["Resources"],"summary":"Create","operationId":"ResourcesCreate","parameters":[{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/Resource"}}],"responses":{"201":{"$ref":"#/responses/ResourceResponse"},"400":{"$ref":"#/responses/BodyDecodingResponse"},"422":{"$ref":"#/responses/ValidationResponse"},"500":{"$ref":"#/responses/InternalResponse"}}}},"/resources/{hostname}":{"get":{"description":"Finds a resource by hostname from the data source.","tags":["Resources"],"summary":"Find by hostname","operationId":"ResourcesFindByHostname","parameters":[{"type":"string","description":"Resource hostname","name":"Hostname","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/ResourceResponse"},"404":{"$ref":"#/responses/NotFoundResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"put":{"description":"Updates a resource by hostname from the data source.","tags":["Resources"],"summary":"Update by hostname","operationId":"ResourcesUpdateByHostname","parameters":[{"type":"string","description":"Resource hostname","name":"Hostname","in":"path","required":true},{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/Resource"}}],"responses":{"200":{"$ref":"#/responses/ResourceResponse"},"400":{"$ref":"#/responses/BodyDecodingResponse"},"404":{"$ref":"#/responses/NotFoundResponse"},"422":{"$ref":"#/responses/ValidationResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"delete":{"description":"Deletes a resource by hostname from the data source.","tags":["Resources"],"summary":"Delete by hostname","operationId":"ResourcesDeleteByHostname","parameters":[{"type":"string","description":"Resource hostname","name":"Hostname","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/ResourceResponse"},"404":{"$ref":"#/responses/NotFoundResponse"},"500":{"$ref":"#/responses/InternalResponse"}}}},"/sessions":{"get":{"description":"Finds all the sessions from the data source.","tags":["Sessions"],"summary":"Find","operationId":"SessionsFind","responses":{"200":{"$ref":"#/responses/SessionsResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"post":{"description":"Creates a session in the data source.","tags":["Sessions"],"summary":"Create","operationId":"SessionsCreate","parameters":[{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/Session"}}],"responses":{"201":{"$ref":"#/responses/SessionResponse"},"400":{"$ref":"#/responses/BodyDecodingResponse"},"422":{"$ref":"#/responses/ValidationResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"delete":{"description":"Deletes a session by owner token from the data source.","tags":["Sessions"],"summary":"Delete by owner token","operationId":"SessionsDeleteByOwnerToken","parameters":[{"type":"string","description":"Owner tokens (a json array)","name":"Token","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/SessionsResponse"},"500":{"$ref":"#/responses/InternalResponse"}}}},"/sessions/{token}":{"get":{"description":"Finds a session by token from the data source.","tags":["Sessions"],"summary":"Find by token","operationId":"SessionsFindByToken","parameters":[{"type":"string","description":"Session token","name":"Token","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/SessionResponse"},"404":{"$ref":"#/responses/NotFoundResponse"},"500":{"$ref":"#/responses/InternalResponse"}}},"delete":{"description":"Deletes a session by token from the data source.","tags":["Sessions"],"summary":"Delete by token","operationId":"SessionsDeleteByToken","parameters":[{"type":"string","description":"Session token","name":"Token","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/SessionResponse"},"404":{"$ref":"#/responses/NotFoundResponse"},"500":{"$ref":"#/responses/InternalResponse"}}}}},"definitions":{"APIError":{"type":"object","title":"APIError defines the format of Zest API errors.","properties":{"description":{"description":"The description of the API error.","type":"string","x-go-name":"Description"},"errorCode":{"description":"The token uniquely identifying the API error.","type":"string","x-go-name":"ErrorCode"},"raw":{"description":"A raw description of what triggered the API error.","type":"string","x-go-name":"Raw"},"status":{"description":"The status code.","type":"integer","format":"int64","x-go-name":"Status"}},"x-go-package":"github.com/solher/zest"},"Duration":{"description":"A Duration represents the elapsed time between two instants\nas an int64 nanosecond count.  The representation limits the\nlargest representable duration to approximately 290 years.","x-go-package":"time"},"Month":{"title":"A Month specifies a month of the year (January = 1, ...).","x-go-package":"time"},"Permission":{"type":"object","required":["resource"],"properties":{"deny":{"description":"Indicates if the permission grants or denies the access on the resource.","type":"boolean","x-go-name":"Deny"},"enabled":{"description":"Can be used to disable a permission.","type":"boolean","x-go-name":"Enabled"},"paths":{"description":"The optional paths on which the permission apply.","type":"array","items":{"type":"string"},"x-go-name":"Paths"},"resource":{"description":"The resource ID concerned by the permission.","type":"string","x-go-name":"Resource"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"Policy":{"type":"object","required":["name","permissions"],"properties":{"enabled":{"description":"Can be used to disable a policy.","type":"boolean","x-go-name":"Enabled"},"name":{"description":"The policy name.","type":"string","x-go-name":"Name"},"permissions":{"description":"An array of resource IDs and their associated right.","type":"array","items":{"$ref":"#/definitions/Permission"},"x-go-name":"Permissions"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"Resource":{"type":"object","required":["name","hostname"],"properties":{"hostname":{"description":"The resource host name. Ex: 'resource.example.com'","type":"string","x-go-name":"Hostname"},"name":{"description":"The resource name. Must be unique.","type":"string","x-go-name":"Name"},"public":{"description":"Disable the authentication for that resource.","type":"boolean","x-go-name":"Public"},"redirectUrl":{"description":"The redirection URL when access is denied to the resource.","type":"string","x-go-name":"RedirectURL"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"Session":{"type":"object","required":["agent","policies"],"properties":{"agent":{"description":"The end user agent.","type":"string","x-go-name":"Agent"},"created":{"description":"The creation timestamp.","x-go-name":"Created","$ref":"#/definitions/Time"},"ownerToken":{"description":"An optional token to find a user's sessions.","type":"string","x-go-name":"OwnerToken"},"payload":{"description":"A client non checked custom payload.","type":"string","x-go-name":"Payload"},"policies":{"description":"The list of the policy names associated with the session.","type":"array","items":{"type":"string"},"x-go-name":"Policies"},"token":{"description":"The authentication token identifying the session.","type":"string","x-go-name":"Token"},"validTo":{"description":"The validity time limit of the session.","x-go-name":"ValidTo","$ref":"#/definitions/Time"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"Time":{"description":"Programs using times should typically store and pass them as values,\nnot pointers.  That is, time variables and struct fields should be of\ntype time.Time, not *time.Time.  A Time value can be used by\nmultiple goroutines simultaneously.\n\nTime instants can be compared using the Before, After, and Equal methods.\nThe Sub method subtracts two instants, producing a Duration.\nThe Add method adds a Time and a Duration, producing a Time.\n\nThe zero value of type Time is January 1, year 1, 00:00:00.000000000 UTC.\nAs this time is unlikely to come up in practice, the IsZero method gives\na simple way of detecting a time that has not been initialized explicitly.\n\nEach Time has associated with it a Location, consulted when computing the\npresentation form of the time, such as in the Format, Hour, and Year methods.\nThe methods Local, UTC, and In return a Time with a specific location.\nChanging the location in this way changes only the presentation; it does not\nchange the instant in time being denoted and therefore does not affect the\ncomputations described in earlier paragraphs.\n\nNote that the Go == operator compares not just the time instant but also the\nLocation. Therefore, Time values should not be used as map or database keys\nwithout first guaranteeing that the identical Location has been set for all\nvalues, which can be achieved through use of the UTC or Local method.","type":"object","title":"A Time represents an instant in time with nanosecond precision.","x-go-package":"time"},"Weekday":{"title":"A Weekday specifies a day of the week (Sunday = 0, ...).","x-go-package":"time"},"policiesBodyParam":{"type":"object","required":["Body"],"properties":{"Body":{"$ref":"#/definitions/Policy"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"policiesIDParam":{"type":"object","required":["Name"],"properties":{"Name":{"description":"Policy name","type":"string"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"policiesResponse":{"type":"object","properties":{"Body":{"description":"in: body","type":"array","items":{"$ref":"#/definitions/Policy"}}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"policyResponse":{"type":"object","properties":{"Body":{"description":"in: body","$ref":"#/definitions/Policy"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"resourceResponse":{"type":"object","properties":{"Body":{"description":"in: body","$ref":"#/definitions/Resource"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"resourcesBodyParam":{"type":"object","required":["Body"],"properties":{"Body":{"$ref":"#/definitions/Resource"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"resourcesHostnameParam":{"type":"object","required":["Hostname"],"properties":{"Hostname":{"description":"Resource hostname","type":"string"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"resourcesResponse":{"type":"object","properties":{"Body":{"description":"in: body","type":"array","items":{"$ref":"#/definitions/Resource"}}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"sessionResponse":{"type":"object","properties":{"Body":{"description":"in: body","$ref":"#/definitions/Session"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"sessionsBodyParam":{"type":"object","required":["Body"],"properties":{"Body":{"$ref":"#/definitions/Session"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"sessionsOwnerTokenParam":{"type":"object","required":["Token"],"properties":{"Token":{"description":"Owner tokens (a json array)","type":"string"}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"sessionsResponse":{"type":"object","properties":{"Body":{"description":"in: body","type":"array","items":{"$ref":"#/definitions/Session"}}},"x-go-package":"git.wid.la/co-net/auth-server/models"},"sessionsTokenParam":{"type":"object","required":["Token"],"properties":{"Token":{"description":"Session token","type":"string"}},"x-go-package":"git.wid.la/co-net/auth-server/models"}},"responses":{"BodyDecodingResponse":{"description":"Could not decode the JSON request.","schema":{"$ref":"#/definitions/APIError"}},"InternalResponse":{"description":"An internal error occured. Please retry later.","schema":{"$ref":"#/definitions/APIError"}},"InvalidIDResponse":{"description":"The specified ID is invalid.","schema":{"$ref":"#/definitions/APIError"}},"NotFoundResponse":{"description":"The specified resource was not found.","schema":{"$ref":"#/definitions/APIError"}},"PoliciesResponse":{"schema":{"type":"array","items":{"$ref":"#/definitions/Policy"}}},"PolicyResponse":{"schema":{"$ref":"#/definitions/Policy"}},"ResourceResponse":{"schema":{"$ref":"#/definitions/Resource"}},"ResourcesResponse":{"schema":{"type":"array","items":{"$ref":"#/definitions/Resource"}}},"SessionResponse":{"schema":{"$ref":"#/definitions/Session"}},"SessionsResponse":{"schema":{"type":"array","items":{"$ref":"#/definitions/Session"}}},"UnauthorizedResponse":{"description":"The specified resource was not found or you do not have sufficient permissions.","schema":{"$ref":"#/definitions/APIError"}},"ValidationResponse":{"description":"The model validation failed.","schema":{"$ref":"#/definitions/APIError"}}}}